{"openapi":"3.1.0","info":{"contact":{"email":"goodflows@ict-abovo.gr","name":"ict abovo","url":"https://www.ict-abovo.gr/"},"description":"This is the swagger/OPENAPI documentation of Goodflows Server REST API","title":"Goodflows Server REST API","version":"1.0"},"servers":[{"url":"/policyEngine"}],"tags":[{"description":"Information model handling","name":"Information Model API"},{"description":"Process models handling","name":"Workflow Model API"},{"description":"Information model editor state handling","name":"Information Model Editor API"},{"description":"Policy Decision Point actions","name":"Policy Decision Point API"},{"description":"Policy model handling","name":"Policy Model API"}],"paths":{"/informationModel/{companyID}":{"post":{"description":"The model will be created from scratch if it does not exist and get loaded into the temp model of the returned ID (which will be flushed to the stored ontology upon save)","operationId":"createInformationModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"Temp information model ID":{"description":"Temp information model ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the temp information model"}},"summary":"Create Temp Information model","tags":["Information Model API"]}},"/informationModel/{companyID}/{informationModelID}":{"delete":{"operationId":"removeTempInformationModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"Error while deleting information model":{"description":"Error while deleting information model","value":false},"Successful information model deletion":{"description":"Successful information model deletion","value":true}}}},"description":"Successful operation. Response boolean value indicated actual information model deletion"}},"summary":"Delete temp Information model","tags":["Information Model API"]},"get":{"operationId":"openInformationModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"Information model":{"description":"Information model","value":"<rdf:RDF     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"    xmlns:PM=\"http://www.ict-abovo.eu/ontologies/PolicyModel#\"    xmlns:owl=\"http://www.w3.org/2002/07/owl#\"    xmlns:WF=\"http://www.ict-abovo.eu/ontologies/Workflow#\"    xmlns:IM=\"http://www.ict-abovo.eu/ontologies/InformationModel#\"    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"    xmlns:xsd=\"http://www.w3.org/2001/XMLSchema#\" ></rdf:RDF>"}}}},"description":"Successful operation. Returns the OWL representation of the information model"}},"summary":"Get/open Information model","tags":["Information Model API"]},"post":{"operationId":"saveInformationModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"Information model ID":{"description":"Information model ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the stored information model"}},"summary":"Save Information model","tags":["Information Model API"]},"put":{"description":"The model will be reset from scratch if the hardReset parameter is true, else the model will be reset to the last saved version","operationId":"resetInformationModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}},{"description":"denotes whether the information model will be re-initialized (true) or rollbacked to the last saved state (false)","in":"query","name":"hardReset","required":true,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"Information model ID":{"description":"Information model ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the information model"}},"summary":"Reset Information model","tags":["Information Model API"]}},"/informationModel/{companyID}/{informationModelID}/attributes/batch":{"post":{"description":"The body of the message contains a list with the attributes to be inserted","operationId":"createAttributes","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"Batch attributes insertion request":{"description":"Batch attributes insertion request","value":[{"attributeName":"Classification","attributeValue":"Public","attributeType":"STRING","isMutable":true,"belongsToInfoModelEntity":"MedicalRecord","inheritedFrom":"AnyDataType"},{"attributeName":"RetentionPeriod","attributeValue":"Public","attributeType":"INTEGER","isMutable":true,"belongsToInfoModelEntity":"MedicalRecord","inheritedFrom":"AnyDataType"}]}},"schema":{"type":"array","items":{"$ref":"#/components/schemas/Attribute"}}}},"description":"Information model attributes specification\n\nNodes must have been already created and the **belongsToInfoModelEntity** property of each attribute has to be provided\n\n**attributeType** allowed values \"*SEMANTIC_TYPE*\", \"*SEMANTIC_INSTANCE*\", \"*SEMANTIC_LIST*\", \"*STRING*\", \"*INTEGER*\", \"*DOUBLE*\", \"*DATE*\", \"*BOOLEAN*\", \"*STRING_LIST*\", \"*DOUBLE_LIST*\", \"*INTEGER_LIST*\"","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"Attribute ID":{"description":"Attribute ID","value":["ATT7be982b4dd1e4581b820254a49e5a7d9","ATT2565d375dc7d477abfba3caac234f648"]}}}},"description":"Successful operation. Returns the IDs of the created attributes"}},"summary":"Batch insertion of attributes","tags":["Information Model API"]}},"/informationModel/{companyID}/{informationModelID}/edge":{"delete":{"operationId":"deleteEdge_1","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"Delete edge request":{"description":"Delete edge request","value":{"edgeType":"IS_A","sourceNode":{"nodeType":"DATA_TYPES","name":"Gender"},"targetNode":{"nodeType":"DATA_TYPES","name":"PersonalInformation"}}}},"schema":{"$ref":"#/components/schemas/InformationModelEdge"}}},"description":"Information model edge specification","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"Error while deleting information model edge":{"description":"Error while deleting information model edge","value":false},"Successful information model edge deletion":{"description":"Successful information model edge deletion","value":true}}}},"description":"Successful operation. Returns boolean value indicated actual information model edge deletion"}},"summary":"Delete Information model edge","tags":["Information Model API"]},"post":{"operationId":"createEdge","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"Create edge request":{"description":"Create edge request","value":{"edgeType":"IS_A","sourceNode":{"nodeType":"DATA_TYPES","name":"Gender"},"targetNode":{"nodeType":"DATA_TYPES","name":"PersonalInformation"}}}},"schema":{"$ref":"#/components/schemas/InformationModelEdge"}}},"description":"Information model edge specification. Edge connects two nodes belonging to the same graph (intragraph edge) or to different graphs(intergraph edge)\n\n**edgeType** allowed values (types for intragraph and intergraph edges) \"*HAS_ATTRIBUTE (intergraph)*\", \"*HAS_ATTRIBUTE_INVERSE (intergraph)*\", \"*HAS_NAME (intergraph)*\", \"*HAS_TYPE (intergraph)*\", \"*HAS_VALUE (intergraph)*\", \"*HAS_STRING_VALUE (literal value)*\", \"*REFERS_TO_DATA_TYPE (intergraph)*\", \"*IS_OF_STATE (intergraph)*\", \"*IS_OF_FLOW_TYPE (intergraph)*\", \"*HOSTS_CONTAINER (intergraph)*\", \"*ACCEPTS_HUMAN_ACTOR (literal value)*\", \"*PROVIDES_OPERATION_INVERSE (intergraph)*\", \"*IMPLEMENTED_BY (intergraph)*\", \"*COMPLIANT_WITH_PURPOSE (intergraph)*\", \"*HAS_INPUT (intergraph)*\", \"*HAS_OUTPUT (intergraph)*\", \"*HOSTS_CONTAINER_INVERSE (intergraph)*\", \"*PROVIDES_OPERATION (intergraph)*\", \"*COMPLIANT_WITH_PURPOSE_INVERSE (intergraph)*\", \"*MAY_ACT_FOR_PURPOSE_INVERSE (intergraph)*\", \"*MAY_ACT_FOR_PURPOSE (intergraph)*\", \"*HAS_STATE_TYPE (intergraph)*\", \"*HAS_STATE_VALUE (intergraph)*\", \"*HAS_DEFAULT_STATE_VALUE (intergraph)*\", \"*HAS_POTENTIAL_STATE_VALUE (intergraph)*\", \"*IS_A (intragraph)*\", \"*IS_A_INVERSE (intragraph)*\", \"*IS_PART_OF (intragraph)*\", \"*CONTAINS (intragraph)*\", \"*MORE_DETAILED_THAN (intragraph)*\", \"*LESS_DETAILED_THAN (intragraph)*\"","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"Error while creating edge":{"description":"Error while creating edge","value":false},"Successful edge creation":{"description":"Successful edge creation","value":true}}}},"description":"Successful operation. Returns boolean value indicated edge creation success"}},"summary":"Create new Information model edge","tags":["Information Model API"]}},"/informationModel/{companyID}/{informationModelID}/edge/batch":{"post":{"operationId":"createEdges","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"Create edge request":{"description":"Create edge request","value":[{"edgeType":"IS_A","sourceNode":{"nodeType":"DATA_TYPES","name":"Gender"},"targetNode":{"nodeType":"DATA_TYPES","name":"PersonalInformation"}},{"edgeType":"IS_A","sourceNode":{"nodeType":"DATA_TYPES","name":"Citizenship"},"targetNode":{"nodeType":"DATA_TYPES","name":"PersonalInformation"}}]}},"schema":{"type":"array","items":{"$ref":"#/components/schemas/InformationModelEdge"}}}},"description":"Information model edges specification. Edge connects two nodes belonging to the same graph (intragraph edge) or to different graphs(intergraph edge)\n\n**edgeType** allowed values (types for intragraph and intergraph edges) \"*HAS_ATTRIBUTE (intergraph)*\", \"*HAS_ATTRIBUTE_INVERSE (intergraph)*\", \"*HAS_NAME (intergraph)*\", \"*HAS_TYPE (intergraph)*\", \"*HAS_VALUE (intergraph)*\", \"*HAS_STRING_VALUE (literal value)*\", \"*REFERS_TO_DATA_TYPE (intergraph)*\", \"*IS_OF_STATE (intergraph)*\", \"*IS_OF_FLOW_TYPE (intergraph)*\", \"*HOSTS_CONTAINER (intergraph)*\", \"*ACCEPTS_HUMAN_ACTOR (literal value)*\", \"*PROVIDES_OPERATION_INVERSE (intergraph)*\", \"*IMPLEMENTED_BY (intergraph)*\", \"*COMPLIANT_WITH_PURPOSE (intergraph)*\", \"*HAS_INPUT (intergraph)*\", \"*HAS_OUTPUT (intergraph)*\", \"*HOSTS_CONTAINER_INVERSE (intergraph)*\", \"*PROVIDES_OPERATION (intergraph)*\", \"*COMPLIANT_WITH_PURPOSE_INVERSE (intergraph)*\", \"*MAY_ACT_FOR_PURPOSE_INVERSE (intergraph)*\", \"*MAY_ACT_FOR_PURPOSE (intergraph)*\", \"*HAS_STATE_TYPE (intergraph)*\", \"*HAS_STATE_VALUE (intergraph)*\", \"*HAS_DEFAULT_STATE_VALUE (intergraph)*\", \"*HAS_POTENTIAL_STATE_VALUE (intergraph)*\", \"*IS_A (intragraph)*\", \"*IS_A_INVERSE (intragraph)*\", \"*IS_PART_OF (intragraph)*\", \"*CONTAINS (intragraph)*\", \"*MORE_DETAILED_THAN (intragraph)*\", \"*LESS_DETAILED_THAN (intragraph)*\"","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"Error while creating edges":{"description":"Error while creating edges","value":false},"Successful edges creation":{"description":"Successful edges creation","value":true}}}},"description":"Successful operation. Returns boolean value indicated edges creation success"}},"summary":"Batch insertion of Information model edges","tags":["Information Model API"]}},"/informationModel/{companyID}/{informationModelID}/import":{"put":{"description":"The imported information model is provided with the body of the message","operationId":"importInformationModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"text/plain ":{"examples":{"Information model":{"description":"Information model","value":"<rdf:RDF     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"    xmlns:PM=\"http://www.ict-abovo.eu/ontologies/PolicyModel#\"    xmlns:owl=\"http://www.w3.org/2002/07/owl#\"    xmlns:WF=\"http://www.ict-abovo.eu/ontologies/Workflow#\"    xmlns:IM=\"http://www.ict-abovo.eu/ontologies/InformationModel#\"    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"    xmlns:xsd=\"http://www.w3.org/2001/XMLSchema#\" ></rdf:RDF>"}},"schema":{"type":"string"}}},"description":"OWL representation of the information model","required":true},"responses":{"200":{"content":{"text/plain":{"examples":{"Information model ID":{"description":"Information model ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the information model"}},"summary":"Import existing Information model","tags":["Information Model API"]}},"/informationModel/{companyID}/{informationModelID}/importAll":{"put":{"description":"The imported models are provided with the body of the message as a .zip attachment.","operationId":"importAllModels","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"type":"string","format":"binary"}}},"description":"ZIP file containing information model, policy model as well as process models"},"responses":{"200":{"content":{"text/plain":{"examples":{"Information model ID":{"description":"Information model ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the imported information model"}},"summary":"Import information model, policy model as well as process models","tags":["Information Model API"]}},"/informationModel/{companyID}/{informationModelID}/node":{"post":{"operationId":"createNode","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"Create information model node request":{"description":"Create information model node request","value":{"nodeType":"DATA_TYPES","name":"ZipCode"}}},"schema":{"$ref":"#/components/schemas/InformationModelNode"}}},"description":"information model node specification\n\n**nodetype** allowed values \"*ROLES*\", \"*EVENT_TYPES*\", \"*OPERATIONS*\", \"*DATA_TYPES*\", \"*MACHINE_TYPES*\", \"*PURPOSES*\", \"*ATTRIBUTES*\", \"*ATTRIBUTE_NAMES*\", \"*ATTRIBUTE_TYPES*\", \"*CONTEXT_TYPES*\", \"*DATA_IOS*\", \"*FLOWTYPES*\", \"*ORGANISATION_TYPES*\", \"*STATES*\", \"*STATE_TYPES*\", \"*STATE_VALUES*\", \"*OPERATION_CONTAINER_TYPES*\"","required":true},"responses":{"200":{"content":{"text/plain":{"examples":{"Information model node ID":{"description":"Information model node ID","value":"ZipCode"}}}},"description":"Successful operation. Returns the ID of the created information model node"}},"summary":"Create new Information model node","tags":["Information Model API"]}},"/informationModel/{companyID}/{informationModelID}/node/batch":{"post":{"description":"The body of the message contains a list with the nodes to be inserted","operationId":"createNodes","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"Create information model nodes request":{"description":"Create information model nodes request","value":[{"nodeType":"DATA_TYPES","name":"ZipCode"},{"nodeType":"DATA_TYPES","name":"StreetName"}]}},"schema":{"type":"array","items":{"$ref":"#/components/schemas/InformationModelNode"}}}},"description":"information model node specification\n\n**nodetype** allowed values \"*ROLES*\", \"*EVENT_TYPES*\", \"*OPERATIONS*\", \"*DATA_TYPES*\", \"*MACHINE_TYPES*\", \"*PURPOSES*\", \"*ATTRIBUTES*\", \"*ATTRIBUTE_NAMES*\", \"*ATTRIBUTE_TYPES*\", \"*CONTEXT_TYPES*\", \"*DATA_IOS*\", \"*FLOWTYPES*\", \"*ORGANISATION_TYPES*\", \"*STATES*\", \"*STATE_TYPES*\", \"*STATE_VALUES*\", \"*OPERATION_CONTAINER_TYPES*\"","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"Information model node IDs":{"description":"Information model node IDs","value":["ZipCode","StreetName"]}}}},"description":"Successful operation. Returns the IDs of the created information model nodes"}},"summary":"Batch insertion of nodes","tags":["Information Model API"]}},"/informationModel/{companyID}/{informationModelID}/node/{name}":{"delete":{"operationId":"deleteNode","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}},{"description":"unique name of the information model node","in":"path","name":"name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"Error while deleting information model node":{"description":"Error while deleting information model node","value":false},"Successful information model node deletion":{"description":"Successful information model node deletion","value":true}}}},"description":"Successful operation. Returns boolean value indicated actual information model node deletion"}},"summary":"Delete Information model node","tags":["Information Model API"]},"get":{"operationId":"getNode","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}},{"description":"unique name of the information model node","in":"path","name":"name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"Information model node":{"description":"Information model node","value":{"nodeType":"DATA_TYPES","name":"ZipCode"}}},"schema":{"$ref":"#/components/schemas/InformationModelNode"}}},"description":"Successful operation. Returns information model node information"}},"summary":"Get Information model node","tags":["Information Model API"]},"put":{"operationId":"editNode","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}},{"description":"Current information model node name","in":"path","name":"name","required":true,"schema":{"type":"string"}},{"description":"New information model node name","in":"query","name":"newName","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"Information model node ID":{"description":"Information model node ID","value":"ZipCode2"}}}},"description":"Successful operation. Returns the new ID of the information model node"}},"summary":"Rename Information model node","tags":["Information Model API"]}},"/informationModel/{companyID}/{informationModelID}/node/{name}/attributes":{"get":{"operationId":"getAttributes","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}},{"description":"unique name of the information model node","in":"path","name":"name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"Information model node attributes":{"description":"Information model node attributes","value":[{"attributeID":"ATT7be982b4dd1e4581b820254a49e5a7d9","attributeName":"OwnerId","belongsToInfoModelEntity":"Identifier","attributeValue":"Identifier","attributeType":"SEMANTIC_INSTANCE","isMutable":true,"inheritedFrom":"AnyDataType"},{"attributeID":"ATT48c3beabdbb54d8e98546bc49b7b4364","attributeName":"Id","belongsToInfoModelEntity":"Identifier","attributeValue":"Identifier","attributeType":"SEMANTIC_INSTANCE","isMutable":true,"inheritedFrom":"AnyDataType"},{"attributeID":"ATTf02bcc1bbd644aeface9b904545dc292","attributeName":"State","belongsToInfoModelEntity":"Identifier","attributeValue":null,"attributeType":"STRING","isMutable":true,"inheritedFrom":"AnyDataType"},{"attributeID":"ATT52682b89306543e28918141a4bcd17a9","attributeName":"RetentionPeriod","belongsToInfoModelEntity":"Identifier","attributeValue":null,"attributeType":"INTEGER","isMutable":true,"inheritedFrom":"AnyDataType"},{"attributeID":"ATT2565d375dc7d477abfba3caac234f648","attributeName":"RetentionPeriodHasExpired","belongsToInfoModelEntity":"Identifier","attributeValue":"false","attributeType":"BOOLEAN","isMutable":true,"inheritedFrom":"AnyDataType"},{"attributeID":"ATT4f3290cd1c7a4c0381c81df3e65bb363","attributeName":"ConsentProvided","belongsToInfoModelEntity":"Identifier","attributeValue":"false","attributeType":"BOOLEAN","isMutable":true,"inheritedFrom":"AnyDataType"}]}},"schema":{"type":"array","items":{"$ref":"#/components/schemas/Attribute"}}}},"description":"Successful operation. Returns the list of the node's attributes"}},"summary":"Get Information model node attributes","tags":["Information Model API"]},"post":{"operationId":"createAttribute","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}},{"description":"unique name of the information model node","in":"path","name":"name","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"Create attribute request":{"description":"Create attribute request","value":{"attributeName":"Classification","attributeValue":"Public","attributeType":"STRING","isMutable":true,"belongsToInfoModelEntity":"MedicalRecord","inheritedFrom":"AnyDataType"}}},"schema":{"$ref":"#/components/schemas/Attribute"}}},"description":"Information model attribute specification\n\n**belongsToInfoModelEntity** is redundant in this case as it is the same with the path parameter {*name*}, but it is necessary for batch insertion of attributes.\n\n**attributeType** allowed values \"*SEMANTIC_TYPE*\", \"*SEMANTIC_INSTANCE*\", \"*SEMANTIC_LIST*\", \"*STRING*\", \"*INTEGER*\", \"*DOUBLE*\", \"*DATE*\", \"*BOOLEAN*\", \"*STRING_LIST*\", \"*DOUBLE_LIST*\", \"*INTEGER_LIST*\"","required":true},"responses":{"200":{"content":{"text/plain":{"examples":{"Attribute ID":{"description":"Attribute ID","value":"ATT7be982b4dd1e4581b820254a49e5a7d9"}}}},"description":"Successful operation. Returns the ID of the created attribute"}},"summary":"Create new Information model node attribute","tags":["Information Model API"]},"put":{"operationId":"editAttribute","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}},{"description":"unique name of the information model node","in":"path","name":"name","required":true,"schema":{"type":"string"}},{"description":"denotes whether deletion will be propagated towards all node's descendants","in":"query","name":"propagateChangesToDescendants","required":true,"schema":{"type":"boolean"}}],"requestBody":{"content":{"application/json":{"examples":{"Update attribute request":{"description":"Update attribute request","value":{"attributeID":"ATT2565d375dc7d477abfba3caac234f648","attributeName":"RetentionPeriodHasExpired","attributeValue":"false","attributeType":"BOOLEAN","isMutable":"true","belongsToInfoModelEntity":"Identifier","inheritedFrom":""}}},"schema":{"$ref":"#/components/schemas/Attribute"}}},"description":"Information model attribute to be updated\n\n**belongsToInfoModelEntity** is is necessary for attribute update.\n\n**attributeType** allowed values \"*SEMANTIC_TYPE*\", \"*SEMANTIC_INSTANCE*\", \"*SEMANTIC_LIST*\", \"*STRING*\", \"*INTEGER*\", \"*DOUBLE*\", \"*DATE*\", \"*BOOLEAN*\", \"*STRING_LIST*\", \"*DOUBLE_LIST*\", \"*INTEGER_LIST*\"","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"Error while updating attribute":{"description":"Error while updating attribute","value":false},"Successful attribute update":{"description":"Successful attribute update","value":true}}}},"description":"Successful operation. Returns boolean value indicated attribute edit success"}},"summary":"Edit Information model node attribute","tags":["Information Model API"]}},"/informationModel/{companyID}/{informationModelID}/node/{name}/attributes/{attributeID}":{"delete":{"operationId":"deleteAttribute","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}},{"description":"unique name of the information model node","in":"path","name":"name","required":true,"schema":{"type":"string"}},{"description":"unique name of the attribute to be deleted","in":"path","name":"attributeID","required":true,"schema":{"type":"string"}},{"description":"denotes whether deletion will be propagated towards all node's descendants","in":"query","name":"propagateDeletionToDescendants","required":true,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"examples":{"Error while deleting attributes":{"description":"Error while deleting attributes","value":false},"Successful attributes deletion":{"description":"Successful attributes deletion","value":true}}}},"description":"Successful operation. Returns boolean value indicated attributes deletion"}},"summary":"Delete Information model node attribute","tags":["Information Model API"]}},"/informationModel/{companyID}/{informationModelID}/node/{name}/relatedNodes/{edgeType}":{"get":{"operationId":"getRelatedNodes","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}},{"description":"unique name of the information model node","in":"path","name":"name","required":true,"schema":{"type":"string"}},{"description":"edgeType of interest","in":"path","name":"edgeType","required":true,"schema":{"type":"string","enum":["HAS_ATTRIBUTE","HAS_ATTRIBUTE_INVERSE","HAS_NAME","HAS_TYPE","HAS_VALUE","HAS_STRING_VALUE","REFERS_TO_DATA_TYPE","IS_OF_STATE","IS_OF_FLOW_TYPE","HOSTS_CONTAINER","ACCEPTS_HUMAN_ACTOR","PROVIDES_OPERATION_INVERSE","IMPLEMENTED_BY","COMPLIANT_WITH_PURPOSE","HAS_INPUT","HAS_OUTPUT","HOSTS_CONTAINER_INVERSE","PROVIDES_OPERATION","COMPLIANT_WITH_PURPOSE_INVERSE","MAY_ACT_FOR_PURPOSE_INVERSE","MAY_ACT_FOR_PURPOSE","HAS_STATE_TYPE","HAS_STATE_VALUE","HAS_DEFAULT_STATE_VALUE","HAS_POTENTIAL_STATE_VALUE","IS_A","IS_A_INVERSE","IS_PART_OF","CONTAINS","MORE_DETAILED_THAN","LESS_DETAILED_THAN"]}}],"responses":{"200":{"content":{"application/json":{"examples":{"Information model related nodes":{"description":"Information model related nodes","value":[{"nodeType":"DATA_TYPES","name":"Age"},{"nodeType":"DATA_TYPES","name":"PersonalInformation"}]}},"schema":{"type":"array","items":{"$ref":"#/components/schemas/InformationModelNode"}}}},"description":"Successful operation. Returns the list of related nodes"}},"summary":"Get Information model node related nodes by edgeType","tags":["Information Model API"]}},"/informationModel/{companyID}/{informationModelID}/{nodeType}":{"get":{"operationId":"getNodesOfType","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the information model","in":"path","name":"informationModelID","required":true,"schema":{"type":"string"}},{"description":"node type of interest","in":"path","name":"nodeType","required":true,"schema":{"type":"string","enum":["ROLES","EVENT_TYPES","OPERATIONS","DATA_TYPES","MACHINE_TYPES","PURPOSES","ATTRIBUTES","ATTRIBUTE_NAMES","ATTRIBUTE_TYPES","CONTEXT_TYPES","DATA_IOS","FLOWTYPES","ORGANISATION_TYPES","STATES","STATE_TYPES","STATE_VALUES","OPERATION_CONTAINER_TYPES"]}}],"responses":{"200":{"content":{"application/json":{"examples":{"Information model attributes of specific type":{"description":"Information model attributes of specific type","value":[{"attributeID":"ATT7be982b4dd1e4581b820254a49e5a7d9","attributeName":"OwnerId","belongsToInfoModelEntity":"Identifier","attributeValue":"Identifier","attributeType":"SEMANTIC_INSTANCE","isMutable":true,"inheritedFrom":"AnyDataType"},{"attributeID":"ATT48c3beabdbb54d8e98546bc49b7b4364","attributeName":"Id","belongsToInfoModelEntity":"Identifier","attributeValue":"Identifier","attributeType":"SEMANTIC_INSTANCE","isMutable":true,"inheritedFrom":"AnyDataType"},{"attributeID":"ATTf02bcc1bbd644aeface9b904545dc292","attributeName":"State","belongsToInfoModelEntity":"Identifier","attributeValue":null,"attributeType":"STRING","isMutable":true,"inheritedFrom":"AnyDataType"},{"attributeID":"ATT52682b89306543e28918141a4bcd17a9","attributeName":"RetentionPeriod","belongsToInfoModelEntity":"Identifier","attributeValue":null,"attributeType":"INTEGER","isMutable":true,"inheritedFrom":"AnyDataType"},{"attributeID":"ATT2565d375dc7d477abfba3caac234f648","attributeName":"RetentionPeriodHasExpired","belongsToInfoModelEntity":"Identifier","attributeValue":"false","attributeType":"BOOLEAN","isMutable":true,"inheritedFrom":"AnyDataType"},{"attributeID":"ATT4f3290cd1c7a4c0381c81df3e65bb363","attributeName":"ConsentProvided","belongsToInfoModelEntity":"Identifier","attributeValue":"false","attributeType":"BOOLEAN","isMutable":true,"inheritedFrom":"AnyDataType"}]},"Information model nodes of specific type":{"description":"Information model nodes of specific type","value":[{"nodeType":"DATA_TYPES","name":"Age"},{"nodeType":"DATA_TYPES","name":"PersonalInformation"}]}},"schema":{"type":"array","items":{"type":"object","oneOf":[{"$ref":"#/components/schemas/InformationModelNode"},{"$ref":"#/components/schemas/Attribute"}]}}}},"description":"Successful operation. Returns the list of the nodes or attributes of the specific type.\n\nAttributes are returned only for nodeType value \"**ATTRIBUTES**\"."}},"summary":"Get Information model nodes/attributes of specific type","tags":["Information Model API"]}},"/informationModelEditor/{companyID}":{"delete":{"operationId":"deleteInformationModelMxgraphFile","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"Error while deleting information model graph state":{"description":"Error while deleting information model graph state","value":false},"Successful information model graph state deletion":{"description":"Successful information model graph state deletion","value":true}}}},"description":"Successful operation. Returns boolean value indicated actual information model editor graph state deletion"}},"summary":"Delete the Information model editor graph state","tags":["Information Model Editor API"]},"get":{"operationId":"getInformationModelMxgraphFile","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/zip":{}},"description":"Successful operation. Returns the editor graph state"}},"summary":"Get Information model editor graph state","tags":["Information Model Editor API"]}},"/informationModelEditor/{companyID}/{workspaceID}":{"put":{"description":"The graph state is stored together with the ontology models","operationId":"putInformationModelMxgraphFile","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace that will be used for getting models information","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"required":["attachment"],"type":"object","properties":{"attachment":{"type":"array","items":{"type":"string","format":"binary"}}}}}}},"responses":{"200":{"content":{"application/json":{"schema":{"type":"boolean"}}},"description":"OK"}},"summary":"Store Information model editor graph state","tags":["Information Model Editor API"]}},"/informationModelEditor/{companyID}/{workspaceID}/export":{"put":{"description":"The current editor graph state is provided as input","operationId":"exportInformationModelMxgraphFile","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace that will be used for getting models information","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"required":["attachment"],"type":"object","properties":{"attachment":{"type":"array","items":{"type":"string","format":"binary"}}}}}}},"responses":{"200":{"content":{"application/zip":{}},"description":"Successful operation. Returns the editor graph state and underlying ontology models in a ZIP file"}},"summary":"Export Information model editor state (editor graph state and underlying ontology models)","tags":["Information Model Editor API"]}},"/pdp/{companyID}":{"post":{"operationId":"requestPolicyDecision","parameters":[{"description":"ID of the company (domain)","in":"path","name":"companyID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Request"}},"application/xacml+xml":{"schema":{"$ref":"#/components/schemas/Request"}},"application/xml":{"schema":{"$ref":"#/components/schemas/Request"}}},"description":"the XACML request","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/XacmlResponseExtended"}},"application/xacml+xml":{"schema":{"$ref":"#/components/schemas/XacmlResponseExtended"}},"application/xml":{"schema":{"$ref":"#/components/schemas/XacmlResponseExtended"}}},"description":"Successful operation. Returns the XACML response"}},"summary":"Evaluates a XACML Policy Decision request","tags":["Policy Decision Point API"]}},"/pdp/{companyID}/conflicts":{"post":{"operationId":"generateConflictsAndAlternativeActions","parameters":[{"description":"ID of the company (domain)","in":"path","name":"companyID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiIntention"}}},"description":"object containing purpose, context, actor, operation, resource entities (concepts along with constraints) to be evaluated against the underlying policy model","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ApiConflict"}}}},"description":"Successful operation. Returns a list of conflicts along with their potential resolution"}},"summary":"Evaluates an action to be performed for a purpose under some context against the underlying policy model and proposes possible fixes","tags":["Policy Decision Point API"]}},"/pdp/{companyID}/{workflowModelID}":{"post":{"operationId":"generateComplianceDirectives","parameters":[{"description":"ID of the company (domain)","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"the ID of the original workflow model stored for the company","in":"path","name":"workflowModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"Verified workflow model ID":{"description":"Verified workflow model ID","value":"WFM_16afa1ee8a564d2086f05e901a39a80a_verified"}}}},"description":"the ID of the verified workflow model stored for the company"}},"summary":"Verifies a given workflow model, in terms of bilateral associations' verification","tags":["Policy Decision Point API"]}},"/policyModel/{companyID}":{"post":{"description":"The model will be created from scratch if it does not exist and get loaded into the temp model of the returned ID (which will be flushed to the stored ontology upon save)","operationId":"createPolicyModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"Temp policy model ID":{"description":"Temp policy model ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the temp policy model"}},"summary":"Create Temp Policy model","tags":["Policy Model API"]}},"/policyModel/{companyID}/{policyModelID}":{"delete":{"operationId":"removeTempPolicyModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"Error while deleting policy model":{"description":"Error while deleting policy model","value":false},"Successful policy model deletion":{"description":"Successful policy model deletion","value":true}}}},"description":"Successful operation. Response boolean value indicated actual policy model deletion"}},"summary":"Delete temp Policy model","tags":["Policy Model API"]},"get":{"operationId":"openPolicyModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"Policy model":{"description":"Policy model","value":"<rdf:RDF     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"    xmlns:PM=\"http://www.ict-abovo.eu/ontologies/PolicyModel#\"    xmlns:owl=\"http://www.w3.org/2002/07/owl#\"    xmlns:WF=\"http://www.ict-abovo.eu/ontologies/Workflow#\"    xmlns:IM=\"http://www.ict-abovo.eu/ontologies/InformationModel#\"    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"    xmlns:xsd=\"http://www.w3.org/2001/XMLSchema#\" ></rdf:RDF>"}}}},"description":"Successful operation. Returns the OWL representation of the policy model"}},"summary":"Get/open Policy model","tags":["Policy Model API"]},"post":{"operationId":"savePolicyModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"Policy model ID":{"description":"Policy model ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the stored policy model"}},"summary":"Save Policy model","tags":["Policy Model API"]},"put":{"description":"The model will be reset from scratch if the hardReset parameter is true, else the model will be reset to the last saved version","operationId":"resetPolicyModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}},{"in":"query","name":"hardReset","required":true,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"Policy model ID":{"description":"Policy model ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the policy model"}},"summary":"Reset Policy model","tags":["Policy Model API"]}},"/policyModel/{companyID}/{policyModelID}/create":{"post":{"description":"The model will be created from scratch if it does not exist and get loaded into the temp model of the given ID (which will be flushed to the stored ontology upon save)","operationId":"createPolicyModel_1","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"Temp policy model ID":{"description":"Temp policy model ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the policy model"}},"summary":"Create Temp Policy model with given ID","tags":["Policy Model API"]}},"/policyModel/{companyID}/{policyModelID}/import":{"put":{"description":"The imported policy model is provided with the body of the message","operationId":"importPolicyModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"text/plain ":{"examples":{"Policy model":{"description":"Policy model","value":"<rdf:RDF     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"    xmlns:PM=\"http://www.ict-abovo.eu/ontologies/PolicyModel#\"    xmlns:owl=\"http://www.w3.org/2002/07/owl#\"    xmlns:WF=\"http://www.ict-abovo.eu/ontologies/Workflow#\"    xmlns:IM=\"http://www.ict-abovo.eu/ontologies/InformationModel#\"    xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"    xmlns:xsd=\"http://www.w3.org/2001/XMLSchema#\" ></rdf:RDF>"}},"schema":{"type":"string"}}},"description":"OWL representation of the policy model","required":true},"responses":{"200":{"content":{"text/plain":{"examples":{"Policy model ID":{"description":"Policy model ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the policy model"}},"summary":"Import existing Policy model","tags":["Policy Model API"]}},"/policyModel/{companyID}/{policyModelID}/rule":{"get":{"description":"All query parameters are optional","operationId":"getRules","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}},{"description":"rule type of interest. Allowed values: *Permissions*, *Prohibitions*, *Obligations*","in":"query","name":"ruleType","required":false,"schema":{"type":"string"}},{"description":"rule ID criterion","in":"query","name":"searchRuleId","required":false,"schema":{"type":"string"}},{"description":"purpose criterion","in":"query","name":"searchPurpose","required":false,"schema":{"type":"string"}},{"description":"rule description criterion","in":"query","name":"searchDescription","required":false,"schema":{"type":"string"}},{"description":"actor criterion","in":"query","name":"searchActor","required":false,"schema":{"type":"string"}},{"description":"operation criterion","in":"query","name":"searchOperation","required":false,"schema":{"type":"string"}},{"description":"resource criterion","in":"query","name":"searchResource","required":false,"schema":{"type":"string"}},{"description":"organisation criterion","in":"query","name":"searchOrganisation","required":false,"schema":{"type":"string"}},{"description":"derived from rule with ID criterion","in":"query","name":"derivedFromRuleID","required":false,"schema":{"type":"string"}},{"description":"first result pagination criterion","in":"query","name":"firstResult","required":false,"schema":{"type":"integer","format":"int64"}},{"description":"page size pagination criterion","in":"query","name":"pageSize","required":false,"schema":{"type":"integer","format":"int64"}},{"description":"order criterion","in":"query","name":"orderExprType","required":false,"schema":{"type":"string","enum":["mainActionActor","mainActionOperation","mainActionResource","mainActionOrganisation","rule","purpose","derivedFromRuleID","ruleType","description"]}},{"description":"pagination order","in":"query","name":"ascOrDesc","required":false,"schema":{"type":"string","enum":["ASC","DESC"]}}],"responses":{"200":{"content":{"application/json":{"examples":{"List of rules of the specific type":{"description":"List of rules of the specific type","value":[{"@type":"ApiRule","id":"PERf1ce653996b7428aa6f4c052f30489ec","label":null,"ruleType":"Permissions","description":"Data subjects should have write access to their data --> Data subjects can only update their county --> Update will be logged afterwards","purpose":"DataRectification","action":{"@type":"ApiAction","id":"AC1c4a8078586c4809a83ed2148db862f7","label":"Action","actor":{"@type":"ApiEnhancedEntity","id":"EE7831e1c7d52f401ab3093cea6bb198d4","label":null,"entityBase":"DataSubject","constraint":null},"operation":{"@type":"ApiEnhancedEntity","id":"EEf6897e9b44e0447c86af86ad1f9e0c6a","label":null,"entityBase":"Write","constraint":null},"resource":{"@type":"ApiEnhancedEntity","id":"EEf6ea87901e2742aea2140cd501789779","label":null,"entityBase":"County","constraint":{"@type":"ApiExpression","id":"PEX372ad1436b9845c384c29c2a4206f228","label":null,"subject":"OwnerId","operator":"equals","stringValue":null,"policyModelEntityValue":{"@type":"ApiVariableConstraint","id":"VC1269def2939c403b8e628a78bb0b0a70","label":null,"variableConstraintBase":{"@type":"ApiVariable","id":"VARbe5914ccee494c39bcbf17b37f91c526","label":null,"variableStructure":"Action.Actor"},"constraintProperty":"Id"},"valueType":"VariableBasedConstraint","isNested":false}},"organisation":{"@type":"ApiEnhancedEntity","id":"EEdc5df22462de4a67bf057cc8fd9a9896","label":null,"entityBase":"InternalOrganisation","constraint":null}},"preActionStructure":null,"postActionStructure":{"@type":"APIRequiredAction","id":"RACa14964e71b3f4f2db89389b5232f2a2b","label":null,"action":{"@type":"ApiAction","id":"ACcd956b8410f84469933bafe73d5324e9","label":"Postaction1","actor":{"@type":"ApiEnhancedEntity","id":"EE4b0fd06390a44a0d9b61f1595066b60e","label":null,"entityBase":"Administrator","constraint":null},"operation":{"@type":"ApiEnhancedEntity","id":"EEc4c0fcd6348f451e8de45c55b4a74c8a","label":null,"entityBase":"LogAccessControlDecision","constraint":null},"resource":{"@type":"ApiEnhancedEntity","id":"EE3f6ebd21995c453eabc5ef6ba518ce91","label":null,"entityBase":"AccessControlLog","constraint":null},"organisation":{"@type":"ApiEnhancedEntity","id":"EEfbb02da82aab4b07add05977b023cba4","label":null,"entityBase":"InternalOrganisation","constraint":null}},"sequenceConstraint":"After"},"context":null,"derivedFromRuleID":null},{"@type":"ApiRule","id":"PER87b579de655e493791d685bf097308ae","label":null,"ruleType":"Permissions","description":"Data subjects should have write access to their data --> Data subjects can only update their county --> Update will be logged afterwards","purpose":"DataRectification","action":{"@type":"ApiAction","id":"AC2b3235b6be9c4ffb85636f5122758fff","label":"Action_Inferred","actor":{"@type":"ApiEnhancedEntity","id":"EEce9d613ee0c1416fb68f12019d29c9c3","label":null,"entityBase":"Patient","constraint":null},"operation":{"@type":"ApiEnhancedEntity","id":"EEc3b5fa0409244e4e9383a5bc7cb114e0","label":null,"entityBase":"UpdatePersonalInformation","constraint":null},"resource":{"@type":"ApiEnhancedEntity","id":"EE804b34ab3be94f6d9e89b24d841ff607","label":null,"entityBase":"County","constraint":{"@type":"ApiExpression","id":"PEX9275b511661c41dd8ef99c8badaf70f9","label":null,"subject":"OwnerId","operator":"equals","stringValue":null,"policyModelEntityValue":{"@type":"ApiVariableConstraint","id":"VC9f4edbd9cd7149629dff5dd62693bfcd","label":null,"variableConstraintBase":{"@type":"ApiVariable","id":"VARa342142a69014d28b033e3c6b3629047","label":null,"variableStructure":"Action_Inferred.Actor"},"constraintProperty":"Id"},"valueType":"VariableBasedConstraint","isNested":false}},"organisation":{"@type":"ApiEnhancedEntity","id":"EE5e1f33048e014cfead8a9060b261f6cd","label":null,"entityBase":"InternalOrganisation","constraint":null}},"preActionStructure":null,"postActionStructure":{"@type":"APIRequiredAction","id":"RAC6f18bcbabe5149a099885b61a5f12eeb","label":null,"action":{"@type":"ApiAction","id":"AC80bb533f081a4e0d99947ca73c48402e","label":"Postaction1","actor":{"@type":"ApiEnhancedEntity","id":"EE81a9f3d03d9441968098a8e366ba016d","label":null,"entityBase":"Administrator","constraint":null},"operation":{"@type":"ApiEnhancedEntity","id":"EEb4859d7e927e4f31858f81615b97721d","label":null,"entityBase":"LogAccessControlDecision","constraint":null},"resource":{"@type":"ApiEnhancedEntity","id":"EE6449e4f9e1dc404f8c22d48cc5f17e6f","label":null,"entityBase":"AccessControlLog","constraint":null},"organisation":{"@type":"ApiEnhancedEntity","id":"EE9387ce6a9b834d0ca2f787a5cad47b80","label":null,"entityBase":"InternalOrganisation","constraint":null}},"sequenceConstraint":"After"},"context":null,"derivedFromRuleID":"PERf1ce653996b7428aa6f4c052f30489ec"}]}},"schema":{"type":"array","items":{"$ref":"#/components/schemas/ApiRule"}}}},"description":"Successful operation. Returns rules specification"}},"summary":"Get rules satisfying given criteria","tags":["Policy Model API"]},"post":{"operationId":"createRule","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"Permission rule example":{"description":"Permission rule example","value":{"@type":"ApiRule","id":null,"label":null,"ruleType":"Permissions","description":"This is a test permission","purpose":"AntiTerrorismOperations","action":{"@type":"ApiAction","id":null,"label":"Action","actor":{"@type":"ApiEnhancedEntity","id":null,"label":null,"entityBase":"AnyRole","constraint":null},"operation":{"@type":"ApiEnhancedEntity","id":null,"label":null,"entityBase":"Analyse","constraint":null},"resource":{"@type":"ApiEnhancedEntity","id":null,"label":null,"entityBase":"AnonymisedData","constraint":null},"organisation":{"@type":"ApiEnhancedEntity","id":null,"label":null,"entityBase":"AnyOrganisationType","constraint":null}},"preActionStructure":null,"postActionStructure":null,"context":null,"derivedFromRuleID":null}}},"schema":{"$ref":"#/components/schemas/ApiRule"}}},"description":"Rule specification\n\n**@type** allowed values *ApiRule*, *ApiAction*, *ApiExpression*, *ApiLogicalRelation*, *APIRequiredAction*, *ApiVariable*, *ApiVariableConstraint*, *ApiEnhancedEntity*\n\n**ApiRule** structure\n\n\t\"id\" the ID of the rule in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the rule\n\n\t\"ruleType\" the type of the rule (mandatory)\n\n\t\"description\" description of the rule\n\n\t\"purpose\" the purpose for which the rule applies (purpose is defined in the information model)\n\n\t\"action\" the action for which the rule applies, it is an \"ApiAction\" instance\n\n\t\"preActionStructure\" the pre-action/s that must have preceded the action of the rule. preActionStructure can be either an \"APIRequiredAction\" or a \"ApiLogicalRelation\" instance.\n\n\t\"postActionStructure\" the pre-action/s that must follow the action of the rule. postActionStructure can be either an \"APIRequiredAction\" or a \"ApiLogicalRelation\" instance.\n\n\t\"context\" the contextual conditions under which the rule applies. context can be either an \"ApiExpression\" or a \"ApiLogicalRelation\" instance.\n\n\n\n**ruleType** allowed values *Permissions*, *Prohibitions*, *Obligations*\n\n**ApiAction** structure (used for associating an actor, an operation, a resource and an organisation)\n\n\t\"id\" the ID of the action in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the action\n\n\t\"actor\" the actor of the action. actor can be an \"ApiEnhancedEntity\", \"ApiVariable\" or \"ApiVariableConstraint\" instance.\n\n\t\"operation\" the operation of the action. operation can be an \"ApiEnhancedEntity\", \"ApiVariable\" or \"ApiVariableConstraint\" instance.\n\n\t\"resource\" the resource of the action. resource can be an \"ApiEnhancedEntity\", \"ApiVariable\" or \"ApiVariableConstraint\" instance.\n\n\t\"organisation\" the organisation of the action. organisation can be an \"ApiEnhancedEntity\", \"ApiVariable\" or \"ApiVariableConstraint\" instance.\n\n**ApiEnhancedEntity** structure. Used for defining constraints upon Info model concepts (in the context of defining actors, operations, resources and organisations)\n\n\t\"id\" the ID of the enhanced entity in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the enhanced entity\n\n\t\"entityBase\" the information model concept being the base of the enhanced entity, e.g. MedicalRecord.\n\n\t\"constraint\" the constraint of the enhanced entity upon its base, e.g., owner equals XXX. constraint can be an \"ApiExpression\" or \"ApiLogicalRelation\" instance.\n\n**ApiExpression** structure (a single constraint)\n\n\t\"id\" the ID of the expression in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the expression\n\n\t\"subject\" the information model concept being the subject of the expression, e.g. Owner.\n\n\t\"operator\" the operator of the expression, e.g., equals. Operator values in the ontology:\n\n\t\"valueType\" the type of the expression value.\n\n\t\"policyModelEntityValue\" the complex value of the expression if the valueType is \"Variable\" or \"VariableBasedConstraint\". policyModelEntityValue can be an \"ApiVariable\" or an \"ApiVariableConstraint\" instance. \"stringValue\" is null.\n\n\t\"stringValue\" the string value of the expression if the valueType is \"Literal\" or \"InfoModelConcept\". \"stringValue\" can be a simple literal or an info model concept. \"policyModelEntityValue\" is null.\n\n\t\"isNested\" this flag denotes a complex expression subject, e.g. Owner.AssignedPhysician, opposed to a simple expression subject Owner.\n\n**valueType** allowed values: *Literal* (e.g., 40), *InfoModelConcept* (e.g., Patient), *Variable* (e.g. Action.Actor, where Action is the label of the referenced action), VariableBasedConstraint* (e.g. Action.Resource.Owner.AssignedPhysician)\n\n**ApiLogicalRelation** structure (used for logically relating *ApiExpressions*, *ApiRequiredActions* and *ApiLogicalRelations*)\n\n\t\"id\" the ID of the logical relation in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the logical relation\n\n\t\"children\" a list containing the logical relation's children, that can be \"APIRequiredAction\", \"ApiExpression\" or \"ApiLogicalRelation\" instances.\n\n\t\"logicalRelationType\" the type of the logical relation, i.e. AND, OR, XOR, NOT.\n\n**logicalRelationType** allowed values *AND* ,*OR*, *XOR*, *NOT*, *XOR*\n\n**APIRequiredAction** structure. Used for defining pre- and post- actions which can be later logically related to each other, through the definition of an action and of a sequence constraint.\n\n\t\"id\" the ID of the required (pre-/post-) action in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the required action\n\n\t\"action\" the action itself, it is an \"ApiAction\" instance\n\n\t\"sequenceConstraint\" denoting when the required action will be performed with regards to the main action of the rule (e.g, Before, After, etc).\n\n**ApiVariable** structure (used for pointing to other rule's elements)\n\n\t\"id\" the ID of the variable in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the variable (not making sense for variables though)\n\n\t\"variableStructure\" the String representation as defined in the editor, based on the label of the referenced entity: {Action}.Resource, {Action}.Operation, {Action}.Actor, {Action}.Organisation {Preaction<id>}.Resource, {Preaction<id>}.Operation, {Preaction<id>}.Actor, {Preaction<id>}.Organisation, {Postaction<id>}.Resource, {Postaction<id>}.Operation, {Postaction<id>}.Actor, {Postaction<id>}.Organisation, {Action}, {Preaction<id>}, {Postaction<id>}, Purpose, Context\n\n**ApiVariableConstraint** structure, used for accessing properties of variables, e.g. preAction1.Actor.Owner.AssignedPhysician. \n\n\t\"id\" the ID of the variable constraint in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the variable constraint(not making sense for variable constraints though)\n\n\t\"variableConstraintBase\" this can be an \"ApiVariable\" or an \"ApiVariableConstraint\" instance.\n\n\t\"constraintProperty\" this can be an \"ApiVariable\" (preAction1.Actor) or an \"ApiVariableConstraint\" (for nested cases, e.g., preAction1.Actor.Owner) instance.","required":true},"responses":{"200":{"content":{"text/plain":{"examples":{"Rule ID":{"description":"Rule ID","value":"PERca4f991b0bfd47e9bc1db7350e92b5fe"}}}},"description":"Successful operation. Returns the ID of the created rule"}},"summary":"Create new rule","tags":["Policy Model API"]},"put":{"operationId":"editRule","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"Permission rule update example":{"description":"Permission rule update example","value":{"@type":"ApiRule","id":"PERca4f991b0bfd47e9bc1db7350e92b5fe","label":null,"ruleType":"Permissions","description":"This is a test permission","purpose":"AntiTerrorismOperations","action":{"@type":"ApiAction","id":null,"label":"Action","actor":{"@type":"ApiEnhancedEntity","id":null,"label":null,"entityBase":"AnyRole","constraint":null},"operation":{"@type":"ApiEnhancedEntity","id":null,"label":null,"entityBase":"Analyse","constraint":null},"resource":{"@type":"ApiEnhancedEntity","id":null,"label":null,"entityBase":"AnonymisedData","constraint":null},"organisation":{"@type":"ApiEnhancedEntity","id":null,"label":null,"entityBase":"AnyOrganisationType","constraint":null}},"preActionStructure":null,"postActionStructure":null,"context":null,"derivedFromRuleID":null}}},"schema":{"$ref":"#/components/schemas/ApiRule"}}},"description":"Rule specification\n\n**@type** allowed values *ApiRule*, *ApiAction*, *ApiExpression*, *ApiLogicalRelation*, *APIRequiredAction*, *ApiVariable*, *ApiVariableConstraint*, *ApiEnhancedEntity*\n\n**ApiRule** structure\n\n\t\"id\" the ID of the rule in the ontology. ID of the rule is included in the body message and has been retrieved through GET rule\n\n\t\"label\" optional, just in case we want to define an alias for the rule\n\n\t\"ruleType\" the type of the rule (mandatory)\n\n\t\"description\" description of the rule\n\n\t\"purpose\" the purpose for which the rule applies (purpose is defined in the information model)\n\n\t\"action\" the action for which the rule applies, it is an \"ApiAction\" instance\n\n\t\"preActionStructure\" the pre-action/s that must have preceded the action of the rule. preActionStructure can be either an \"APIRequiredAction\" or a \"ApiLogicalRelation\" instance.\n\n\t\"postActionStructure\" the pre-action/s that must follow the action of the rule. postActionStructure can be either an \"APIRequiredAction\" or a \"ApiLogicalRelation\" instance.\n\n\t\"context\" the contextual conditions under which the rule applies. context can be either an \"ApiExpression\" or a \"ApiLogicalRelation\" instance.\n\n\n\n**ruleType** allowed values *Permissions*, *Prohibitions*, *Obligations*\n\n**ApiAction** structure (used for associating an actor, an operation, a resource and an organisation)\n\n\t\"id\" the ID of the action in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the action\n\n\t\"actor\" the actor of the action. actor can be an \"ApiEnhancedEntity\", \"ApiVariable\" or \"ApiVariableConstraint\" instance.\n\n\t\"operation\" the operation of the action. operation can be an \"ApiEnhancedEntity\", \"ApiVariable\" or \"ApiVariableConstraint\" instance.\n\n\t\"resource\" the resource of the action. resource can be an \"ApiEnhancedEntity\", \"ApiVariable\" or \"ApiVariableConstraint\" instance.\n\n\t\"organisation\" the organisation of the action. organisation can be an \"ApiEnhancedEntity\", \"ApiVariable\" or \"ApiVariableConstraint\" instance.\n\n**ApiEnhancedEntity** structure. Used for defining constraints upon Info model concepts (in the context of defining actors, operations, resources and organisations)\n\n\t\"id\" the ID of the enhanced entity in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the enhanced entity\n\n\t\"entityBase\" the information model concept being the base of the enhanced entity, e.g. MedicalRecord.\n\n\t\"constraint\" the constraint of the enhanced entity upon its base, e.g., owner equals XXX. constraint can be an \"ApiExpression\" or \"ApiLogicalRelation\" instance.\n\n**ApiExpression** structure (a single constraint)\n\n\t\"id\" the ID of the expression in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the expression\n\n\t\"subject\" the information model concept being the subject of the expression, e.g. Owner.\n\n\t\"operator\" the operator of the expression, e.g., equals. Operator values in the ontology:\n\n\t\"valueType\" the type of the expression value.\n\n\t\"policyModelEntityValue\" the complex value of the expression if the valueType is \"Variable\" or \"VariableBasedConstraint\". policyModelEntityValue can be an \"ApiVariable\" or an \"ApiVariableConstraint\" instance. \"stringValue\" is null.\n\n\t\"stringValue\" the string value of the expression if the valueType is \"Literal\" or \"InfoModelConcept\". \"stringValue\" can be a simple literal or an info model concept. \"policyModelEntityValue\" is null.\n\n\t\"isNested\" this flag denotes a complex expression subject, e.g. Owner.AssignedPhysician, opposed to a simple expression subject Owner.\n\n**valueType** allowed values: *Literal* (e.g., 40), *InfoModelConcept* (e.g., Patient), *Variable* (e.g. Action.Actor, where Action is the label of the referenced action), VariableBasedConstraint* (e.g. Action.Resource.Owner.AssignedPhysician)\n\n**ApiLogicalRelation** structure (used for logically relating *ApiExpressions*, *ApiRequiredActions* and *ApiLogicalRelations*)\n\n\t\"id\" the ID of the logical relation in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the logical relation\n\n\t\"children\" a list containing the logical relation's children, that can be \"APIRequiredAction\", \"ApiExpression\" or \"ApiLogicalRelation\" instances.\n\n\t\"logicalRelationType\" the type of the logical relation, i.e. AND, OR, XOR, NOT.\n\n**logicalRelationType** allowed values *AND* ,*OR*, *XOR*, *NOT*, *XOR*\n\n**APIRequiredAction** structure. Used for defining pre- and post- actions which can be later logically related to each other, through the definition of an action and of a sequence constraint.\n\n\t\"id\" the ID of the required (pre-/post-) action in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the required action\n\n\t\"action\" the action itself, it is an \"ApiAction\" instance\n\n\t\"sequenceConstraint\" denoting when the required action will be performed with regards to the main action of the rule (e.g, Before, After, etc).\n\n**ApiVariable** structure (used for pointing to other rule's elements)\n\n\t\"id\" the ID of the variable in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the variable (not making sense for variables though)\n\n\t\"variableStructure\" the String representation as defined in the editor, based on the label of the referenced entity: {Action}.Resource, {Action}.Operation, {Action}.Actor, {Action}.Organisation {Preaction<id>}.Resource, {Preaction<id>}.Operation, {Preaction<id>}.Actor, {Preaction<id>}.Organisation, {Postaction<id>}.Resource, {Postaction<id>}.Operation, {Postaction<id>}.Actor, {Postaction<id>}.Organisation, {Action}, {Preaction<id>}, {Postaction<id>}, Purpose, Context\n\n**ApiVariableConstraint** structure, used for accessing properties of variables, e.g. preAction1.Actor.Owner.AssignedPhysician. \n\n\t\"id\" the ID of the variable constraint in the ontology\n\n\t\"label\" optional, just in case we want to define an alias for the variable constraint(not making sense for variable constraints though)\n\n\t\"variableConstraintBase\" this can be an \"ApiVariable\" or an \"ApiVariableConstraint\" instance.\n\n\t\"constraintProperty\" this can be an \"ApiVariable\" (preAction1.Actor) or an \"ApiVariableConstraint\" (for nested cases, e.g., preAction1.Actor.Owner) instance.","required":true},"responses":{"200":{"content":{"text/plain":{"examples":{"Rule ID":{"description":"Rule ID","value":"PERca4f991b0bfd47e9bc1db7350e92b5fe"}}}},"description":"Successful operation. Returns the ID of the updated rule"}},"summary":"Edit rule","tags":["Policy Model API"]}},"/policyModel/{companyID}/{policyModelID}/rule/count":{"get":{"description":"used in lazy loaded tables","operationId":"getRulesCount","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}},{"description":"rule type of interest. Allowed values: *Permissions*, *Prohibitions*, *Obligations*","in":"query","name":"ruleType","required":false,"schema":{"type":"string"}},{"description":"rule ID criterion","in":"query","name":"searchRuleId","required":false,"schema":{"type":"string"}},{"description":"purpose criterion","in":"query","name":"searchPurpose","required":false,"schema":{"type":"string"}},{"description":"rule description criterion","in":"query","name":"searchDescription","required":false,"schema":{"type":"string"}},{"description":"actor criterion","in":"query","name":"searchActor","required":false,"schema":{"type":"string"}},{"description":"operation criterion","in":"query","name":"searchOperation","required":false,"schema":{"type":"string"}},{"description":"resource criterion","in":"query","name":"searchResource","required":false,"schema":{"type":"string"}},{"description":"organisation criterion","in":"query","name":"searchOrganisation","required":false,"schema":{"type":"string"}},{"description":"derived from rule with ID criterion","in":"query","name":"derivedFromRuleID","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"Number of rules":{"description":"Number of rules","value":5}}}},"description":"Successful operation. Returns the number of rules based on provided search criteria"}},"summary":"Count rules","tags":["Policy Model API"]}},"/policyModel/{companyID}/{policyModelID}/rule/metaRules":{"post":{"operationId":"extractMetaRules","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"Error while extracting meta-rules":{"description":"Error while extracting meta-rules","value":false},"Successful meta-rules extraction":{"description":"Successful meta-rules extraction","value":true}}}},"description":"Successful operation. Response boolean value indicated meta-rules extraction success"}},"summary":"Extract meta-rules","tags":["Policy Model API"]}},"/policyModel/{companyID}/{policyModelID}/rule/searchApplicable":{"post":{"operationId":"getApplicableRules","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"Permission rule update example":{"description":"Permission rule update example","value":{"purpose":"RightOfAccess"}}},"schema":{"$ref":"#/components/schemas/CompositeSearchRuleCriteria"}}},"description":"Composite search rule criteria","required":true},"responses":{"200":{"content":{"application/json":{"examples":{"List of applicable rules":{"description":"List of applicable rules","value":[{"@type":"ApiRule","id":"PERf1ce653996b7428aa6f4c052f30489ec","label":null,"ruleType":"Permissions","description":"Data subjects should have write access to their data --> Data subjects can only update their county --> Update will be logged afterwards","purpose":"DataRectification","action":{"@type":"ApiAction","id":"AC1c4a8078586c4809a83ed2148db862f7","label":"Action","actor":{"@type":"ApiEnhancedEntity","id":"EE7831e1c7d52f401ab3093cea6bb198d4","label":null,"entityBase":"DataSubject","constraint":null},"operation":{"@type":"ApiEnhancedEntity","id":"EEf6897e9b44e0447c86af86ad1f9e0c6a","label":null,"entityBase":"Write","constraint":null},"resource":{"@type":"ApiEnhancedEntity","id":"EEf6ea87901e2742aea2140cd501789779","label":null,"entityBase":"County","constraint":{"@type":"ApiExpression","id":"PEX372ad1436b9845c384c29c2a4206f228","label":null,"subject":"OwnerId","operator":"equals","stringValue":null,"policyModelEntityValue":{"@type":"ApiVariableConstraint","id":"VC1269def2939c403b8e628a78bb0b0a70","label":null,"variableConstraintBase":{"@type":"ApiVariable","id":"VARbe5914ccee494c39bcbf17b37f91c526","label":null,"variableStructure":"Action.Actor"},"constraintProperty":"Id"},"valueType":"VariableBasedConstraint","isNested":false}},"organisation":{"@type":"ApiEnhancedEntity","id":"EEdc5df22462de4a67bf057cc8fd9a9896","label":null,"entityBase":"InternalOrganisation","constraint":null}},"preActionStructure":null,"postActionStructure":{"@type":"APIRequiredAction","id":"RACa14964e71b3f4f2db89389b5232f2a2b","label":null,"action":{"@type":"ApiAction","id":"ACcd956b8410f84469933bafe73d5324e9","label":"Postaction1","actor":{"@type":"ApiEnhancedEntity","id":"EE4b0fd06390a44a0d9b61f1595066b60e","label":null,"entityBase":"Administrator","constraint":null},"operation":{"@type":"ApiEnhancedEntity","id":"EEc4c0fcd6348f451e8de45c55b4a74c8a","label":null,"entityBase":"LogAccessControlDecision","constraint":null},"resource":{"@type":"ApiEnhancedEntity","id":"EE3f6ebd21995c453eabc5ef6ba518ce91","label":null,"entityBase":"AccessControlLog","constraint":null},"organisation":{"@type":"ApiEnhancedEntity","id":"EEfbb02da82aab4b07add05977b023cba4","label":null,"entityBase":"InternalOrganisation","constraint":null}},"sequenceConstraint":"After"},"context":null,"derivedFromRuleID":null},{"@type":"ApiRule","id":"PER87b579de655e493791d685bf097308ae","label":null,"ruleType":"Permissions","description":"Data subjects should have write access to their data --> Data subjects can only update their county --> Update will be logged afterwards","purpose":"DataRectification","action":{"@type":"ApiAction","id":"AC2b3235b6be9c4ffb85636f5122758fff","label":"Action_Inferred","actor":{"@type":"ApiEnhancedEntity","id":"EEce9d613ee0c1416fb68f12019d29c9c3","label":null,"entityBase":"Patient","constraint":null},"operation":{"@type":"ApiEnhancedEntity","id":"EEc3b5fa0409244e4e9383a5bc7cb114e0","label":null,"entityBase":"UpdatePersonalInformation","constraint":null},"resource":{"@type":"ApiEnhancedEntity","id":"EE804b34ab3be94f6d9e89b24d841ff607","label":null,"entityBase":"County","constraint":{"@type":"ApiExpression","id":"PEX9275b511661c41dd8ef99c8badaf70f9","label":null,"subject":"OwnerId","operator":"equals","stringValue":null,"policyModelEntityValue":{"@type":"ApiVariableConstraint","id":"VC9f4edbd9cd7149629dff5dd62693bfcd","label":null,"variableConstraintBase":{"@type":"ApiVariable","id":"VARa342142a69014d28b033e3c6b3629047","label":null,"variableStructure":"Action_Inferred.Actor"},"constraintProperty":"Id"},"valueType":"VariableBasedConstraint","isNested":false}},"organisation":{"@type":"ApiEnhancedEntity","id":"EE5e1f33048e014cfead8a9060b261f6cd","label":null,"entityBase":"InternalOrganisation","constraint":null}},"preActionStructure":null,"postActionStructure":{"@type":"APIRequiredAction","id":"RAC6f18bcbabe5149a099885b61a5f12eeb","label":null,"action":{"@type":"ApiAction","id":"AC80bb533f081a4e0d99947ca73c48402e","label":"Postaction1","actor":{"@type":"ApiEnhancedEntity","id":"EE81a9f3d03d9441968098a8e366ba016d","label":null,"entityBase":"Administrator","constraint":null},"operation":{"@type":"ApiEnhancedEntity","id":"EEb4859d7e927e4f31858f81615b97721d","label":null,"entityBase":"LogAccessControlDecision","constraint":null},"resource":{"@type":"ApiEnhancedEntity","id":"EE6449e4f9e1dc404f8c22d48cc5f17e6f","label":null,"entityBase":"AccessControlLog","constraint":null},"organisation":{"@type":"ApiEnhancedEntity","id":"EE9387ce6a9b834d0ca2f787a5cad47b80","label":null,"entityBase":"InternalOrganisation","constraint":null}},"sequenceConstraint":"After"},"context":null,"derivedFromRuleID":"PERf1ce653996b7428aa6f4c052f30489ec"}]}},"schema":{"type":"array","items":{"$ref":"#/components/schemas/ApiRule"}}}},"description":"Successful operation. Returns applicable rules specification"}},"summary":"Search applicable rules","tags":["Policy Model API"]}},"/policyModel/{companyID}/{policyModelID}/rule/{ruleID}":{"delete":{"operationId":"deleteRule","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}},{"description":"ID of the unique name of the rule","in":"path","name":"ruleID","required":true,"schema":{"type":"string"}},{"description":"denotes whether deletion will be propagated towards all associated metarules","in":"query","name":"propagateDeletionToDescendants","required":true,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"examples":{"Error while deleting rule":{"description":"Error while deleting rule","value":false},"Successful rule deletion":{"description":"Successful rule deletion","value":true}}}},"description":"Successful operation. Returns boolean value indicated actual rule deletion"}},"summary":"Delete rule","tags":["Policy Model API"]},"get":{"operationId":"getRule","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the policy model","in":"path","name":"policyModelID","required":true,"schema":{"type":"string"}},{"description":"ID of the unique name of the rule","in":"path","name":"ruleID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"Permission rule":{"description":"Permission rule","value":{"@type":"ApiRule","id":null,"label":null,"ruleType":"Permissions","description":"This is a test permission","purpose":"AntiTerrorismOperations","action":{"@type":"ApiAction","id":null,"label":"Action","actor":{"@type":"ApiEnhancedEntity","id":null,"label":null,"entityBase":"AnyRole","constraint":null},"operation":{"@type":"ApiEnhancedEntity","id":null,"label":null,"entityBase":"Analyse","constraint":null},"resource":{"@type":"ApiEnhancedEntity","id":null,"label":null,"entityBase":"AnonymisedData","constraint":null},"organisation":{"@type":"ApiEnhancedEntity","id":null,"label":null,"entityBase":"AnyOrganisationType","constraint":null}},"preActionStructure":null,"postActionStructure":null,"context":null,"derivedFromRuleID":null}}},"schema":{"$ref":"#/components/schemas/ApiRule"}}},"description":"Successful operation. Returns rule specification"}},"summary":"Get rule","tags":["Policy Model API"]}},"/processModel/{companyID}/{workspaceID}/models":{"get":{"description":"All process models that have been created and not deleted within the company and current workspace will be listed.","operationId":"listProcessModels","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ApiProcessModelBasicInfo"}}}},"description":"Successful operation. Returns the list of all currently existing process models"}},"summary":"Display all process models in a list","tags":["Workflow Model API"]}},"/processModel/{companyID}/{workspaceID}/process":{"post":{"description":"The process model will be created in the specified company/workspace from scratch if it does not exist, and get loaded into the temp model of the returned ID (which will be flushed to the stored ontology upon save)","operationId":"createProcessModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"temp process model ID":{"description":"temp process model ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the temp process model"}},"summary":"Create temp process model","tags":["Workflow Model API"]}},"/processModel/{companyID}/{workspaceID}/{processModelID}":{"delete":{"description":"Deletes the specified process model, thereby removing all associated models from the ontology.","operationId":"deleteProcessModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"boolean"}}},"description":"Successful operation. Returns true if process model successfully deleted."}},"summary":"Delete a previously created process model","tags":["Workflow Model API"]},"get":{"description":"Loads the specified process model from the ontology onto the appropriate object.","operationId":"openProcessModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiProcessModel"}}},"description":"Successful operation. Returns the object representing the specified process model"}},"summary":"Open a previously created process model","tags":["Workflow Model API"]},"put":{"description":"Updates the specified process model with the information contained in the provided process model object.","operationId":"updateProcessModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiProcessModel"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"type":"boolean"}}},"description":"Successful operation. Returns true if process model successfully updated."}},"summary":"Update a previously created process model","tags":["Workflow Model API"]}},"/processModel/{companyID}/{workspaceID}/{processModelID}/edge":{"post":{"description":"A new edge will be created and associated with the process model at hand. This will be defined to connect the task nodes specified as its source and destination in the edge object passed as a parameter. Mainly designed to facilitate the creation, through the UI, of a new edge connecting two existing tasks.","operationId":"createNewEdge","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiWorkflowEdge"}}},"required":true},"responses":{"200":{"content":{"text/plain":{"examples":{"edge ID":{"description":"edge ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the edge"}},"summary":"Create a new edge","tags":["Workflow Model API"]}},"/processModel/{companyID}/{workspaceID}/{processModelID}/edge/{edgeID}":{"delete":{"description":"The edge specified through its ID is removed from the process model.","operationId":"deleteEdge","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}},{"description":"ID of the edge to be deleted","in":"path","name":"edgeID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"edge ID":{"description":"edge ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the removed edge."}},"summary":"Delete an edge","tags":["Workflow Model API"]},"get":{"description":"Provides an object representing the process edge specified through the corresponding ID.","operationId":"getEdge","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}},{"description":"ID of the edge","in":"path","name":"edgeID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiWorkflowEdge"}}},"description":"Successful operation. Returns an edge object."}},"summary":"Retrieve an edge by ID","tags":["Workflow Model API"]},"put":{"description":"Updates a process edge specified through its ID, by setting the values defined within an edge object passed as a parameter.","operationId":"updateEdge","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}},{"description":"ID of the edge to be updated","in":"path","name":"edgeID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiWorkflowEdge"}}},"required":true},"responses":{"200":{"content":{"text/plain":{"examples":{"edge ID":{"description":"edge ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the updated edge"}},"summary":"Update an edge","tags":["Workflow Model API"]}},"/processModel/{companyID}/{workspaceID}/{processModelID}/edge/{edgeID}/type":{"put":{"description":"By default, each new edge is created without a type ('plain'). Through this method its type can be set to be either control or data edge.","operationId":"updateEdgeType","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}},{"description":"ID of the edge to be updated","in":"path","name":"edgeID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiWorkflowEdge"}}},"required":true},"responses":{"200":{"content":{"text/plain":{"examples":{"edge type":{"description":"edge type","value":"DataEdges"}}}},"description":"Successful operation. Returns the type of the edge as string, assuming one of the following three values: 'PLAIN', 'ControlEdges', 'DataEdges'."}},"summary":"Update the type of an edge","tags":["Workflow Model API"]}},"/processModel/{companyID}/{workspaceID}/{processModelID}/export":{"get":{"description":"Exports the specified process model as an OWL ontology.","operationId":"exportProcessModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{}},"description":"Successful operation. Returns the process model owl file."}},"summary":"Retrieve the OWL representation of a process model","tags":["Workflow Model API"]}},"/processModel/{companyID}/{workspaceID}/{processModelID}/exportRichModel":{"get":{"description":"Exports the specified process model as the corresponding OWL ontology. It also exports the full Information Model and the basic concepts of Workflow Models.","operationId":"exportRichProcessModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{}},"description":"Successful operation. Returns the enriched process model owl file."}},"summary":"Retrieve an enriched OWL representation of a process model","tags":["Workflow Model API"]}},"/processModel/{companyID}/{workspaceID}/{processModelID}/graph":{"get":{"description":"Returns the mxgraph zip file that has been created for the specified process model.","operationId":"getProcessModelMxGraphFile","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/zip":{}},"description":"Successful operation. Returns the mxgraph zip file."}},"summary":"Retrieve the mxgraph zip file corresponding to a given process model","tags":["Workflow Model API"]},"put":{"description":"Saves the specified process model to the ontology, thereby also storing the associated mxgraph zip file for future use. The ZIP file should be uploaded using 'multipart/form-data' media type using the 'attachment' input.","operationId":"saveProcessModelWithMxGraphFile","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"required":["attachment"],"type":"object","properties":{"attachment":{"type":"array","description":"The mxgraph zip file","items":{"type":"string","format":"binary"}}}}}}},"responses":{"200":{"content":{"application/json":{"schema":{"type":"boolean"}}},"description":"Successful operation. Returns true if process model successfully saved."}},"summary":"Save a process model","tags":["Workflow Model API"]}},"/processModel/{companyID}/{workspaceID}/{processModelID}/initiators":{"put":{"description":"Allows the workflow designer to provide a list of abstract and/or concrete actors as initiators. Note that this function removes all previously initiators associated prior to adding the new ones.","operationId":"setProcessModelInitiators","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiInitiators"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"type":"boolean"}}},"description":"Successful operation. Returns true if initiators successfully set."}},"summary":"Associate one or more initiators to a process model","tags":["Workflow Model API"]}},"/processModel/{companyID}/{workspaceID}/{processModelID}/purposes":{"put":{"description":"Adds a set of possible process purposes to the process model, implying that such a workflow can be executed in order for any of these purposes to be served. Note that this method removes any purposes previously defined.","operationId":"setProcessModelPurposes","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiPurposes"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"type":"boolean"}}},"description":"Successful operation. Returns true if purposes successfully set."}},"summary":"Associate one or more purposes to a process model","tags":["Workflow Model API"]}},"/processModel/{companyID}/{workspaceID}/{processModelID}/task":{"post":{"description":"A new task node will be created and associated with the process model at hand. This method only defines its operation, passed as a parameter as part of the corresponding task node object. Mainly designed to facilitate the creation of new task nodes through the UI, based on operation.","operationId":"createNewTaskNode","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiTaskNode"}}},"required":true},"responses":{"200":{"content":{"text/plain":{"examples":{"task node ID":{"description":"task node ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the task node"}},"summary":"Create a new task node","tags":["Workflow Model API"]}},"/processModel/{companyID}/{workspaceID}/{processModelID}/task/{taskNodeID}":{"delete":{"description":"The task node specified through its ID is removed from the process model, together with its ingoing/outgoing edges.","operationId":"deleteTaskNode","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}},{"description":"ID of the task node to be deleted","in":"path","name":"taskNodeID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"text/plain":{"examples":{"task node ID":{"description":"task node ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the removed task node."}},"summary":"Delete a task node","tags":["Workflow Model API"]},"get":{"description":"Provides an object representing the process task node specified through the corresponding ID.","operationId":"getTaskNode","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}},{"description":"ID of the process task node","in":"path","name":"taskNodeID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiTaskNode"}}},"description":"Successful operation. Returns a task node object."}},"summary":"Retrieve a task node by ID","tags":["Workflow Model API"]},"put":{"description":"Updates a process task node specified through its ID, by setting the values defined within a task node object passed as a parameter.","operationId":"updateTaskNode","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}},{"description":"ID of the task node to be updated","in":"path","name":"taskNodeID","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiTaskNode"}}},"required":true},"responses":{"200":{"content":{"text/plain":{"examples":{"task node ID":{"description":"task node ID","value":"16afa1ee8a564d2086f05e901a39a80a"}}}},"description":"Successful operation. Returns the ID of the updated task node"}},"summary":"Update a task node","tags":["Workflow Model API"]}},"/processModel/{companyID}/{workspaceID}/{processModelID}/verify":{"get":{"description":"Constructs the verified and transformed (if needed) version of the specified process model.","operationId":"verifyProcessModel","parameters":[{"description":"ID of the company","in":"path","name":"companyID","required":true,"schema":{"type":"string"}},{"description":"ID of the workspace","in":"path","name":"workspaceID","required":true,"schema":{"type":"string"}},{"description":"ID of the process model","in":"path","name":"processModelID","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiVerifiedProcessModel"}}},"description":"Successful operation. Returns an object representing the verified version of the initial process model."}},"summary":"Verify a user-defined process model","tags":["Workflow Model API"]}}},"components":{"schemas":{"APIRequiredAction":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiPolicyModelEntity"},{"type":"object","properties":{"action":{"$ref":"#/components/schemas/ApiAction"},"sequenceConstraint":{"type":"string"}}}]},"APISimplifiedRequiredAction":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"},{"type":"object","properties":{"action":{"$ref":"#/components/schemas/ApiSimplifiedAction"},"sequenceConstraint":{"type":"string"}}}]},"Advice":{"type":"object","properties":{"adviceId":{"type":"string","xml":{"name":"AdviceId","attribute":true}},"attributeAssignments":{"type":"array","xml":{"name":"AttributeAssignment"},"items":{"$ref":"#/components/schemas/AttributeAssignment"}}},"xml":{"name":"Advice","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"ApiAction":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiPolicyModelEntity"},{"type":"object","properties":{"actor":{"$ref":"#/components/schemas/ApiPolicyModelEntity"},"operation":{"$ref":"#/components/schemas/ApiPolicyModelEntity"},"organisation":{"$ref":"#/components/schemas/ApiPolicyModelEntity"},"resource":{"$ref":"#/components/schemas/ApiPolicyModelEntity"}}}]},"ApiActionEntity":{"type":"object","properties":{"concept":{"type":"string"},"constraint":{"oneOf":[{"$ref":"#/components/schemas/APISimplifiedRequiredAction"},{"$ref":"#/components/schemas/ApiActionEntity"},{"$ref":"#/components/schemas/ApiSimplifiedAction"},{"$ref":"#/components/schemas/ApiSimplifiedExpression"},{"$ref":"#/components/schemas/ApiSimplifiedLogicalRelation"},{"$ref":"#/components/schemas/ApiSimplifiedVariable"},{"$ref":"#/components/schemas/ApiSimplifiedVariableConstraint"}]}}},"ApiConflict":{"type":"object","properties":{"intention":{"$ref":"#/components/schemas/ApiIntention"},"originalRuleIds":{"type":"array","items":{"type":"string"}},"updatedIntention":{"$ref":"#/components/schemas/ApiUpdatedIntention"}}},"ApiEnhancedEntity":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiPolicyModelEntity"},{"type":"object","properties":{"constraint":{"$ref":"#/components/schemas/ApiPolicyModelEntity"},"entityBase":{"type":"string"}}}]},"ApiExpression":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiPolicyModelEntity"},{"type":"object","properties":{"isNested":{"type":"boolean"},"operator":{"type":"string"},"policyModelEntityValue":{"$ref":"#/components/schemas/ApiPolicyModelEntity"},"stringValue":{"type":"string"},"subject":{"type":"string"},"valueType":{"type":"string","enum":["Literal","InfoModelConcept","Variable","VariableBasedConstraint"]}}}]},"ApiInitiators":{"type":"object","description":"The list of initiators","allOf":[{"$ref":"#/components/schemas/ApiWorkflowModelEntity"},{"type":"object","properties":{"initiators":{"type":"array","items":{"type":"string"}}}}]},"ApiIntention":{"type":"object","properties":{"actor":{"$ref":"#/components/schemas/ApiActionEntity"},"context":{"oneOf":[{"$ref":"#/components/schemas/APIRequiredAction"},{"$ref":"#/components/schemas/ApiAction"},{"$ref":"#/components/schemas/ApiEnhancedEntity"},{"$ref":"#/components/schemas/ApiExpression"},{"$ref":"#/components/schemas/ApiLogicalRelation"},{"$ref":"#/components/schemas/ApiRule"},{"$ref":"#/components/schemas/ApiVariable"},{"$ref":"#/components/schemas/ApiVariableConstraint"}]},"operation":{"$ref":"#/components/schemas/ApiActionEntity"},"purpose":{"type":"string"},"resource":{"$ref":"#/components/schemas/ApiActionEntity"}}},"ApiLogicalRelation":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiPolicyModelEntity"},{"type":"object","properties":{"children":{"type":"array","items":{"$ref":"#/components/schemas/ApiPolicyModelEntity"}},"logicalRelationType":{"type":"string","enum":["AND","OR","NOT","XOR"]}}}]},"ApiPolicyModelEntity":{"type":"object","properties":{"id":{"type":"string"},"label":{"type":"string"}}},"ApiProcessModel":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiWorkflowModelEntity"},{"type":"object","properties":{"description":{"type":"string"},"initiators":{"type":"array","items":{"type":"string"}},"isVerified":{"type":"boolean"},"purposes":{"type":"array","items":{"type":"string"}},"verified":{"type":"boolean"}}}]},"ApiProcessModelBasicInfo":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiWorkflowModelEntity"},{"type":"object","properties":{"description":{"type":"string"},"isVerified":{"type":"boolean"},"verified":{"type":"boolean"}}}]},"ApiPurposes":{"type":"object","description":"The list of purposes","allOf":[{"$ref":"#/components/schemas/ApiWorkflowModelEntity"},{"type":"object","properties":{"purposes":{"type":"array","items":{"type":"string"}}}}]},"ApiRule":{"required":["ruleType"],"type":"object","allOf":[{"$ref":"#/components/schemas/ApiPolicyModelEntity"},{"type":"object","properties":{"action":{"$ref":"#/components/schemas/ApiAction"},"context":{"$ref":"#/components/schemas/ApiPolicyModelEntity"},"derivedFromRuleID":{"type":"string"},"description":{"type":"string"},"postActionStructure":{"$ref":"#/components/schemas/ApiPolicyModelEntity"},"preActionStructure":{"$ref":"#/components/schemas/ApiPolicyModelEntity"},"purpose":{"type":"string"},"ruleType":{"type":"string","enum":["Permissions","Prohibitions","Obligations"]}}}]},"ApiSimplifiedAction":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"},{"type":"object","properties":{"actor":{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"},"operation":{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"},"resource":{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"}}}]},"ApiSimplifiedExpression":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"},{"type":"object","properties":{"isNested":{"type":"boolean"},"operator":{"type":"string"},"policyModelEntityValue":{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"},"stringValue":{"type":"string"},"subject":{"type":"string"},"valueType":{"type":"string","enum":["Literal","InfoModelConcept","Variable","VariableBasedConstraint"]}}}]},"ApiSimplifiedLogicalRelation":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"},{"type":"object","properties":{"children":{"type":"array","items":{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"}},"logicalRelationType":{"type":"string","enum":["AND","OR","NOT","XOR"]}}}]},"ApiSimplifiedPolicyModelEntity":{"type":"object"},"ApiSimplifiedVariable":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"},{"type":"object","properties":{"variableStructure":{"type":"string"}}}]},"ApiSimplifiedVariableConstraint":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"},{"type":"object","properties":{"constraintProperty":{"type":"string"},"variableConstraintBase":{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"}}}]},"ApiTaskNode":{"type":"object","description":"The specified task node object","allOf":[{"$ref":"#/components/schemas/ApiWorkflowModelEntity"},{"type":"object","properties":{"controlSync":{"type":"boolean"},"dataSync":{"type":"boolean"},"description":{"type":"string"},"executionProfiles":{"type":"array","properties":{"empty":{"type":"boolean"}},"items":{"$ref":"#/components/schemas/ApiWorkflowModelEntity"}},"isControlSync":{"type":"boolean"},"isDataSync":{"type":"boolean"},"operation":{"type":"string"}}}]},"ApiUpdatedIntention":{"type":"object","properties":{"actor":{"$ref":"#/components/schemas/ApiActionEntity"},"combinedResources":{"type":"array","items":{"$ref":"#/components/schemas/ApiActionEntity"}},"context":{"oneOf":[{"$ref":"#/components/schemas/APIRequiredAction"},{"$ref":"#/components/schemas/ApiAction"},{"$ref":"#/components/schemas/ApiEnhancedEntity"},{"$ref":"#/components/schemas/ApiExpression"},{"$ref":"#/components/schemas/ApiLogicalRelation"},{"$ref":"#/components/schemas/ApiRule"},{"$ref":"#/components/schemas/ApiVariable"},{"$ref":"#/components/schemas/ApiVariableConstraint"}]},"negativePostActions":{"type":"array","items":{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"}},"negativePreActions":{"type":"array","items":{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"}},"operation":{"$ref":"#/components/schemas/ApiActionEntity"},"positivePostActions":{"type":"array","items":{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"}},"positivePreActions":{"type":"array","items":{"$ref":"#/components/schemas/ApiSimplifiedPolicyModelEntity"}},"purpose":{"type":"string"},"resource":{"$ref":"#/components/schemas/ApiActionEntity"}}},"ApiVariable":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiPolicyModelEntity"},{"type":"object","properties":{"variableStructure":{"type":"string"}}}]},"ApiVariableConstraint":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiPolicyModelEntity"},{"type":"object","properties":{"constraintProperty":{"type":"string"},"variableConstraintBase":{"$ref":"#/components/schemas/ApiPolicyModelEntity"}}}]},"ApiVerifiedProcessModel":{"type":"object","allOf":[{"$ref":"#/components/schemas/ApiWorkflowModelEntity"},{"type":"object","properties":{"description":{"type":"string"},"edges":{"type":"array","properties":{"empty":{"type":"boolean"}},"items":{"$ref":"#/components/schemas/ApiWorkflowModelEntity"}},"initiators":{"type":"array","items":{"type":"string"}},"isVerified":{"type":"boolean"},"purposes":{"type":"array","items":{"type":"string"}},"tasks":{"type":"array","properties":{"empty":{"type":"boolean"}},"items":{"$ref":"#/components/schemas/ApiWorkflowModelEntity"}},"verificationResult":{"type":"string"},"verified":{"type":"boolean"}}}]},"ApiWorkflowEdge":{"type":"object","description":"The specified edge object","allOf":[{"$ref":"#/components/schemas/ApiWorkflowModelEntity"},{"type":"object","properties":{"conditions":{"$ref":"#/components/schemas/ApiWorkflowModelEntity"},"destinationTaskNodeID":{"type":"string"},"edgeDescription":{"type":"string"},"edgeType":{"type":"string"},"flowConstraints":{"$ref":"#/components/schemas/ApiWorkflowModelEntity"},"informationEntities":{"type":"array","properties":{"empty":{"type":"boolean"}},"items":{"$ref":"#/components/schemas/ApiWorkflowModelEntity"}},"sourceTaskNodeID":{"type":"string"}}}]},"ApiWorkflowModelEntity":{"type":"object","properties":{"id":{"type":"string"},"label":{"type":"string"}}},"AssociatedAdvice":{"required":["advices"],"type":"object","properties":{"advices":{"type":"array","xml":{"name":"Advice"},"items":{"$ref":"#/components/schemas/Advice"}}},"xml":{"name":"AssociatedAdvice","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"Attr":{"type":"object","properties":{"attributes":{"$ref":"#/components/schemas/NamedNodeMap"},"baseURI":{"type":"string"},"childNodes":{"$ref":"#/components/schemas/NodeList"},"firstChild":{"$ref":"#/components/schemas/Node"},"id":{"type":"boolean"},"lastChild":{"$ref":"#/components/schemas/Node"},"localName":{"type":"string"},"name":{"type":"string"},"namespaceURI":{"type":"string"},"nextSibling":{"$ref":"#/components/schemas/Node"},"nodeName":{"type":"string"},"nodeType":{"type":"integer","format":"int32"},"nodeValue":{"type":"string"},"ownerDocument":{"$ref":"#/components/schemas/Document"},"ownerElement":{"$ref":"#/components/schemas/Element"},"parentNode":{"$ref":"#/components/schemas/Node"},"prefix":{"type":"string"},"previousSibling":{"$ref":"#/components/schemas/Node"},"schemaTypeInfo":{"$ref":"#/components/schemas/TypeInfo"},"specified":{"type":"boolean"},"textContent":{"type":"string"},"value":{"type":"string"}}},"Attribute":{"required":["attributeName","attributeType"],"type":"object","properties":{"attributeID":{"type":"string"},"attributeName":{"type":"string"},"attributeType":{"type":"string","enum":["SEMANTIC_TYPE","SEMANTIC_INSTANCE","SEMANTIC_LIST","STRING","INTEGER","DOUBLE","DATE","BOOLEAN","STRING_LIST","DOUBLE_LIST","INTEGER_LIST"]},"attributeValue":{"type":"object"},"belongsToInfoModelEntity":{"type":"string"},"inheritedFrom":{"type":"string"},"isMutable":{"type":"boolean"}}},"AttributeAssignment":{"type":"object","properties":{"attributeId":{"type":"string","xml":{"name":"AttributeId","attribute":true}},"category":{"type":"string","xml":{"name":"Category","attribute":true}},"content":{"type":"array","items":{"type":"object"}},"dataType":{"type":"string","xml":{"name":"DataType","attribute":true}},"issuer":{"type":"string","xml":{"name":"Issuer","attribute":true}},"otherAttributes":{"type":"object","additionalProperties":{"type":"string"}}},"xml":{"name":"AttributeAssignment","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"Attributes":{"type":"object","properties":{"attributes":{"type":"array","xml":{"name":"Attribute"},"items":{"$ref":"#/components/schemas/Attribute"}},"category":{"type":"string","xml":{"name":"Category","attribute":true}},"content":{"$ref":"#/components/schemas/Content"},"id":{"type":"string","xml":{"namespace":"http://www.w3.org/XML/1998/namespace","attribute":true}}},"xml":{"name":"Attributes","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"AttributesReference":{"type":"object","properties":{"referenceId":{"type":"object"}},"xml":{"name":"AttributesReference","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"Content":{"type":"object","properties":{"content":{"type":"array","items":{"type":"object"}}},"xml":{"name":"Content","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"DOMConfiguration":{"type":"object","properties":{"parameterNames":{"$ref":"#/components/schemas/DOMStringList"}}},"DOMImplementation":{"type":"object"},"DOMStringList":{"type":"object","properties":{"length":{"type":"integer","format":"int32"}}},"Document":{"type":"object","properties":{"attributes":{"$ref":"#/components/schemas/NamedNodeMap"},"baseURI":{"type":"string"},"childNodes":{"$ref":"#/components/schemas/NodeList"},"doctype":{"$ref":"#/components/schemas/DocumentType"},"documentElement":{"$ref":"#/components/schemas/Element"},"documentURI":{"type":"string"},"domConfig":{"$ref":"#/components/schemas/DOMConfiguration"},"firstChild":{"$ref":"#/components/schemas/Node"},"implementation":{"$ref":"#/components/schemas/DOMImplementation"},"inputEncoding":{"type":"string"},"lastChild":{"$ref":"#/components/schemas/Node"},"localName":{"type":"string"},"namespaceURI":{"type":"string"},"nextSibling":{"$ref":"#/components/schemas/Node"},"nodeName":{"type":"string"},"nodeType":{"type":"integer","format":"int32"},"nodeValue":{"type":"string"},"ownerDocument":{"$ref":"#/components/schemas/Document"},"parentNode":{"$ref":"#/components/schemas/Node"},"prefix":{"type":"string"},"previousSibling":{"$ref":"#/components/schemas/Node"},"strictErrorChecking":{"type":"boolean"},"textContent":{"type":"string"},"xmlEncoding":{"type":"string"},"xmlStandalone":{"type":"boolean"},"xmlVersion":{"type":"string"}}},"DocumentType":{"type":"object","properties":{"attributes":{"$ref":"#/components/schemas/NamedNodeMap"},"baseURI":{"type":"string"},"childNodes":{"$ref":"#/components/schemas/NodeList"},"entities":{"$ref":"#/components/schemas/NamedNodeMap"},"firstChild":{"$ref":"#/components/schemas/Node"},"internalSubset":{"type":"string"},"lastChild":{"$ref":"#/components/schemas/Node"},"localName":{"type":"string"},"name":{"type":"string"},"namespaceURI":{"type":"string"},"nextSibling":{"$ref":"#/components/schemas/Node"},"nodeName":{"type":"string"},"nodeType":{"type":"integer","format":"int32"},"nodeValue":{"type":"string"},"notations":{"$ref":"#/components/schemas/NamedNodeMap"},"ownerDocument":{"$ref":"#/components/schemas/Document"},"parentNode":{"$ref":"#/components/schemas/Node"},"prefix":{"type":"string"},"previousSibling":{"$ref":"#/components/schemas/Node"},"publicId":{"type":"string"},"systemId":{"type":"string"},"textContent":{"type":"string"}}},"Element":{"type":"object","properties":{"attributeNode":{"$ref":"#/components/schemas/Attr"},"attributeNodeNS":{"$ref":"#/components/schemas/Attr"},"attributes":{"$ref":"#/components/schemas/NamedNodeMap"},"baseURI":{"type":"string"},"childNodes":{"$ref":"#/components/schemas/NodeList"},"firstChild":{"$ref":"#/components/schemas/Node"},"lastChild":{"$ref":"#/components/schemas/Node"},"localName":{"type":"string"},"namespaceURI":{"type":"string"},"nextSibling":{"$ref":"#/components/schemas/Node"},"nodeName":{"type":"string"},"nodeType":{"type":"integer","format":"int32"},"nodeValue":{"type":"string"},"ownerDocument":{"$ref":"#/components/schemas/Document"},"parentNode":{"$ref":"#/components/schemas/Node"},"prefix":{"type":"string"},"previousSibling":{"$ref":"#/components/schemas/Node"},"schemaTypeInfo":{"$ref":"#/components/schemas/TypeInfo"},"tagName":{"type":"string"},"textContent":{"type":"string"}}},"IdReferenceType":{"type":"object","properties":{"earliestVersion":{"type":"string","xml":{"name":"EarliestVersion","attribute":true}},"latestVersion":{"type":"string","xml":{"name":"LatestVersion","attribute":true}},"value":{"type":"string"},"version":{"type":"string","xml":{"name":"Version","attribute":true}}}},"InformationModelEdge":{"required":["edgeType","sourceNode","targetNode"],"type":"object","properties":{"edgeType":{"type":"string","enum":["HAS_ATTRIBUTE","HAS_ATTRIBUTE_INVERSE","HAS_NAME","HAS_TYPE","HAS_VALUE","HAS_STRING_VALUE","REFERS_TO_DATA_TYPE","IS_OF_STATE","IS_OF_FLOW_TYPE","HOSTS_CONTAINER","ACCEPTS_HUMAN_ACTOR","PROVIDES_OPERATION_INVERSE","IMPLEMENTED_BY","COMPLIANT_WITH_PURPOSE","HAS_INPUT","HAS_OUTPUT","HOSTS_CONTAINER_INVERSE","PROVIDES_OPERATION","COMPLIANT_WITH_PURPOSE_INVERSE","MAY_ACT_FOR_PURPOSE_INVERSE","MAY_ACT_FOR_PURPOSE","HAS_STATE_TYPE","HAS_STATE_VALUE","HAS_DEFAULT_STATE_VALUE","HAS_POTENTIAL_STATE_VALUE","IS_A","IS_A_INVERSE","IS_PART_OF","CONTAINS","MORE_DETAILED_THAN","LESS_DETAILED_THAN"]},"sourceNode":{"$ref":"#/components/schemas/InformationModelNode"},"targetNode":{"$ref":"#/components/schemas/InformationModelNode"}}},"InformationModelNode":{"required":["name","nodeType"],"type":"object","properties":{"name":{"type":"string"},"nodeType":{"type":"string","enum":["ROLES","EVENT_TYPES","OPERATIONS","DATA_TYPES","MACHINE_TYPES","PURPOSES","ATTRIBUTES","ATTRIBUTE_NAMES","ATTRIBUTE_TYPES","CONTEXT_TYPES","DATA_IOS","FLOWTYPES","ORGANISATION_TYPES","STATES","STATE_TYPES","STATE_VALUES","OPERATION_CONTAINER_TYPES"]},"outputFormat":{"type":"string","writeOnly":true,"enum":["ROLES","EVENT_TYPES","OPERATIONS","DATA_TYPES","MACHINE_TYPES","PURPOSES","ATTRIBUTES","ATTRIBUTE_NAMES","ATTRIBUTE_TYPES","CONTEXT_TYPES","DATA_IOS","FLOWTYPES","ORGANISATION_TYPES","STATES","STATE_TYPES","STATE_VALUES","OPERATION_CONTAINER_TYPES"]}}},"MultiRequests":{"required":["requestReferences"],"type":"object","properties":{"requestReferences":{"type":"array","xml":{"name":"RequestReference"},"items":{"$ref":"#/components/schemas/RequestReference"}}},"xml":{"name":"MultiRequests","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"NamedNodeMap":{"type":"object","properties":{"length":{"type":"integer","format":"int32"},"namedItem":{"$ref":"#/components/schemas/Node"},"namedItemNS":{"$ref":"#/components/schemas/Node"}}},"Node":{"type":"object","properties":{"attributes":{"$ref":"#/components/schemas/NamedNodeMap"},"baseURI":{"type":"string"},"childNodes":{"$ref":"#/components/schemas/NodeList"},"firstChild":{"$ref":"#/components/schemas/Node"},"lastChild":{"$ref":"#/components/schemas/Node"},"localName":{"type":"string"},"namespaceURI":{"type":"string"},"nextSibling":{"$ref":"#/components/schemas/Node"},"nodeName":{"type":"string"},"nodeType":{"type":"integer","format":"int32"},"nodeValue":{"type":"string"},"ownerDocument":{"$ref":"#/components/schemas/Document"},"parentNode":{"$ref":"#/components/schemas/Node"},"prefix":{"type":"string"},"previousSibling":{"$ref":"#/components/schemas/Node"},"textContent":{"type":"string"}}},"NodeList":{"type":"object","properties":{"length":{"type":"integer","format":"int32"}}},"Obligation":{"type":"object","properties":{"attributeAssignments":{"type":"array","xml":{"name":"AttributeAssignment"},"items":{"$ref":"#/components/schemas/AttributeAssignment"}},"obligationId":{"type":"string","xml":{"name":"ObligationId","attribute":true}}},"xml":{"name":"Obligation","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"Obligations":{"required":["obligations"],"type":"object","properties":{"obligations":{"type":"array","xml":{"name":"Obligation"},"items":{"$ref":"#/components/schemas/Obligation"}}},"xml":{"name":"Obligations","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"PolicyIdentifierList":{"type":"object","properties":{"policyIdReferencesAndPolicySetIdReferences":{"type":"array","items":{"type":"object","properties":{"globalScope":{"type":"boolean"},"name":{"type":"object","properties":{"localPart":{"type":"string"},"namespaceURI":{"type":"string"},"prefix":{"type":"string"}}},"nil":{"type":"boolean"},"typeSubstituted":{"type":"boolean"},"value":{"$ref":"#/components/schemas/IdReferenceType"}}}}},"xml":{"name":"PolicyIdentifierList","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"Request":{"required":["attributes"],"type":"object","properties":{"attributes":{"type":"array","xml":{"name":"Attributes"},"items":{"$ref":"#/components/schemas/Attributes"}},"combinedDecision":{"type":"boolean","xml":{"name":"CombinedDecision","attribute":true}},"multiRequests":{"$ref":"#/components/schemas/MultiRequests"},"requestDefaults":{"$ref":"#/components/schemas/RequestDefaults"},"returnPolicyIdList":{"type":"boolean","xml":{"name":"ReturnPolicyIdList","attribute":true}}},"xml":{"name":"Request","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"RequestDefaults":{"type":"object","properties":{"xpathVersion":{"type":"string"}},"xml":{"name":"RequestDefaults","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"RequestReference":{"required":["attributesReferences"],"type":"object","properties":{"attributesReferences":{"type":"array","xml":{"name":"AttributesReference"},"items":{"$ref":"#/components/schemas/AttributesReference"}}},"xml":{"name":"RequestReference","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"Result":{"required":["decision"],"type":"object","properties":{"associatedAdvice":{"$ref":"#/components/schemas/AssociatedAdvice"},"attributes":{"type":"array","xml":{"name":"Attributes"},"items":{"$ref":"#/components/schemas/Attributes"}},"decision":{"type":"string","xml":{"name":"Decision"},"enum":["PERMIT","DENY","INDETERMINATE","NOT_APPLICABLE"]},"obligations":{"$ref":"#/components/schemas/Obligations"},"policyIdentifierList":{"$ref":"#/components/schemas/PolicyIdentifierList"},"status":{"$ref":"#/components/schemas/Status"}},"xml":{"name":"Result","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"Status":{"required":["statusCode"],"type":"object","properties":{"statusCode":{"$ref":"#/components/schemas/StatusCode"},"statusDetail":{"$ref":"#/components/schemas/StatusDetail"},"statusMessage":{"type":"string","xml":{"name":"StatusMessage"}}},"xml":{"name":"Status","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"StatusCode":{"type":"object","properties":{"statusCode":{"$ref":"#/components/schemas/StatusCode"},"value":{"type":"string","xml":{"name":"Value","attribute":true}}},"xml":{"name":"StatusCode","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"StatusDetail":{"type":"object","properties":{"anies":{"type":"array","items":{"$ref":"#/components/schemas/Element"}}},"xml":{"name":"StatusDetail","namespace":"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"}},"TypeInfo":{"type":"object","properties":{"typeName":{"type":"string"},"typeNamespace":{"type":"string"}}},"XacmlResponseExtended":{"required":["results"],"type":"object","properties":{"results":{"type":"array","xml":{"name":"Result"},"items":{"$ref":"#/components/schemas/Result"}}}}}}}